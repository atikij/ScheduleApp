// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ScheduleApp.Models;

public partial class ScheduleContext : DbContext
{
    public ScheduleContext(DbContextOptions<ScheduleContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cabinet> Cabinets { get; set; }

    public virtual DbSet<CabinetType> CabinetTypes { get; set; }

    public virtual DbSet<Day> Days { get; set; }

    public virtual DbSet<Pair> Pairs { get; set; }

    public virtual DbSet<Semester> Semesters { get; set; }

    public virtual DbSet<StudentGroup> StudentGroups { get; set; }

    public virtual DbSet<Subject> Subjects { get; set; }

    public virtual DbSet<SubjectLesson> SubjectLessons { get; set; }

    public virtual DbSet<Teacher> Teachers { get; set; }

    public virtual DbSet<Week> Weeks { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("latin1_swedish_ci")
            .HasCharSet("latin1");

        modelBuilder.Entity<Cabinet>(entity =>
        {
            entity.HasKey(e => e.IdCabinet).HasName("PRIMARY");

            entity.ToTable("Cabinet");

            entity.HasIndex(e => e.IdType, "id_type");

            entity.Property(e => e.IdCabinet)
                .HasColumnType("int(11)")
                .HasColumnName("id_cabinet");
            entity.Property(e => e.IdType)
                .HasColumnType("int(11)")
                .HasColumnName("id_type");
            entity.Property(e => e.NameCabinet)
                .HasMaxLength(255)
                .HasColumnName("name_cabinet");

            entity.HasOne(d => d.IdTypeNavigation).WithMany(p => p.Cabinets)
                .HasForeignKey(d => d.IdType)
                .HasConstraintName("Cabinet_ibfk_1");
        });

        modelBuilder.Entity<CabinetType>(entity =>
        {
            entity.HasKey(e => e.IdType).HasName("PRIMARY");

            entity.ToTable("CabinetType");

            entity.Property(e => e.IdType)
                .HasColumnType("int(11)")
                .HasColumnName("id_type");
            entity.Property(e => e.TypeCabinet)
                .HasMaxLength(255)
                .HasColumnName("Type_Cabinet");
        });

        modelBuilder.Entity<Day>(entity =>
        {
            entity.HasKey(e => e.IdDay).HasName("PRIMARY");

            entity.ToTable("Day");

            entity.HasIndex(e => e.IdWeek, "id_week");

            entity.Property(e => e.IdDay)
                .HasColumnType("int(11)")
                .HasColumnName("id_day");
            entity.Property(e => e.DayWeek)
                .HasMaxLength(255)
                .HasColumnName("day_week");
            entity.Property(e => e.IdWeek)
                .HasColumnType("int(11)")
                .HasColumnName("id_week");

            entity.HasOne(d => d.IdWeekNavigation).WithMany(p => p.Days)
                .HasForeignKey(d => d.IdWeek)
                .HasConstraintName("Day_ibfk_1");
        });

        modelBuilder.Entity<Pair>(entity =>
        {
            entity.HasKey(e => new { e.IdPair, e.IdTeacher, e.IdCabinet, e.IdGroup, e.IdDay, e.IdTypeLesson, e.IdSubject, e.IdSheduleNumber })
                .HasName("PRIMARY")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0, 0, 0, 0, 0, 0 });

            entity.ToTable("Pair");

            entity.HasIndex(e => e.IdCabinet, "idCabinet_idx");

            entity.HasIndex(e => e.IdDay, "idDay_idx");

            entity.HasIndex(e => e.IdSubject, "idSubject_idx");

            entity.HasIndex(e => e.IdTeacher, "idTeacher_idx");

            entity.HasIndex(e => e.IdTypeLesson, "idTypeLesson_idx");

            entity.HasIndex(e => e.IdGroup, "id_group_idx");

            entity.Property(e => e.IdPair)
                .HasColumnType("int(11)")
                .HasColumnName("idPair");
            entity.Property(e => e.IdTeacher)
                .HasColumnType("int(11)")
                .HasColumnName("idTeacher");
            entity.Property(e => e.IdCabinet)
                .HasColumnType("int(11)")
                .HasColumnName("idCabinet");
            entity.Property(e => e.IdGroup)
                .HasColumnType("int(11)")
                .HasColumnName("idGroup");
            entity.Property(e => e.IdDay)
                .HasColumnType("int(11)")
                .HasColumnName("idDay");
            entity.Property(e => e.IdTypeLesson)
                .HasColumnType("int(11)")
                .HasColumnName("idTypeLesson");
            entity.Property(e => e.IdSubject)
                .HasColumnType("int(11)")
                .HasColumnName("idSubject");
            entity.Property(e => e.IdSheduleNumber)
                .HasColumnType("int(11)")
                .HasColumnName("idSheduleNumber");

            entity.HasOne(d => d.IdCabinetNavigation).WithMany(p => p.Pairs)
                .HasForeignKey(d => d.IdCabinet)
                .HasConstraintName("id_cabinet");

            entity.HasOne(d => d.IdDayNavigation).WithMany(p => p.Pairs)
                .HasForeignKey(d => d.IdDay)
                .HasConstraintName("id_day");

            entity.HasOne(d => d.IdGroupNavigation).WithMany(p => p.Pairs)
                .HasForeignKey(d => d.IdGroup)
                .HasConstraintName("id_group");

            entity.HasOne(d => d.IdSubjectNavigation).WithMany(p => p.Pairs)
                .HasForeignKey(d => d.IdSubject)
                .HasConstraintName("id_subject");

            entity.HasOne(d => d.IdTeacherNavigation).WithMany(p => p.Pairs)
                .HasForeignKey(d => d.IdTeacher)
                .HasConstraintName("id_teacher");

            entity.HasOne(d => d.IdTypeLessonNavigation).WithMany(p => p.Pairs)
                .HasForeignKey(d => d.IdTypeLesson)
                .HasConstraintName("id_typeless");
        });

        modelBuilder.Entity<Semester>(entity =>
        {
            entity.HasKey(e => e.IdSemester).HasName("PRIMARY");

            entity.ToTable("Semester");

            entity.Property(e => e.IdSemester)
                .HasColumnType("int(11)")
                .HasColumnName("id_semester");
            entity.Property(e => e.NumberSemester)
                .HasColumnType("int(11)")
                .HasColumnName("number_semester");
        });

        modelBuilder.Entity<StudentGroup>(entity =>
        {
            entity.HasKey(e => e.IdGroup).HasName("PRIMARY");

            entity.ToTable("Student_Groups");

            entity.Property(e => e.IdGroup)
                .HasColumnType("int(11)")
                .HasColumnName("id_group");
            entity.Property(e => e.Course)
                .HasMaxLength(255)
                .HasColumnName("course");
            entity.Property(e => e.NameGroup)
                .HasMaxLength(255)
                .HasColumnName("name_group");
        });

        modelBuilder.Entity<Subject>(entity =>
        {
            entity.HasKey(e => e.IdSubject).HasName("PRIMARY");

            entity.ToTable("Subject");

            entity.Property(e => e.IdSubject)
                .HasColumnType("int(11)")
                .HasColumnName("id_subject");
            entity.Property(e => e.NameSubject)
                .HasMaxLength(255)
                .HasColumnName("name_subject");
        });

        modelBuilder.Entity<SubjectLesson>(entity =>
        {
            entity.HasKey(e => e.IdTypeless).HasName("PRIMARY");

            entity.ToTable("SubjectLesson");

            entity.Property(e => e.IdTypeless)
                .HasColumnType("int(11)")
                .HasColumnName("id_typeless");
            entity.Property(e => e.NameOfTypeLesson).HasMaxLength(45);
        });

        modelBuilder.Entity<Teacher>(entity =>
        {
            entity.HasKey(e => e.IdTeacher).HasName("PRIMARY");

            entity.Property(e => e.IdTeacher)
                .HasColumnType("int(11)")
                .HasColumnName("id_teacher");
            entity.Property(e => e.IsActive).HasColumnName("is_active");
            entity.Property(e => e.NameTeacher)
                .HasMaxLength(255)
                .HasColumnName("name_teacher");
        });

        modelBuilder.Entity<Week>(entity =>
        {
            entity.HasKey(e => e.IdWeek).HasName("PRIMARY");

            entity.ToTable("Week");

            entity.HasIndex(e => e.IdSemester, "id_semester");

            entity.Property(e => e.IdWeek)
                .HasColumnType("int(11)")
                .HasColumnName("id_week");
            entity.Property(e => e.IdSemester)
                .HasColumnType("int(11)")
                .HasColumnName("id_semester");
            entity.Property(e => e.TypeWeek)
                .HasMaxLength(255)
                .HasColumnName("type_week");

            entity.HasOne(d => d.IdSemesterNavigation).WithMany(p => p.Weeks)
                .HasForeignKey(d => d.IdSemester)
                .HasConstraintName("Week_ibfk_1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}